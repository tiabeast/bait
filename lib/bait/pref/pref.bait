// This file is part of: bait.
// Copyright (c) 2022 Lukas Neubert.
// Use of this code is governed by an MIT License (see LICENSE.md).
package pref

import os

struct Preferences {
	command string
	path     string
	is_test  bool
	out_name string
}

fun parse_args(args []string) Preferences {
	// TODO struct pointer inits &pref.Preferences{}
	p := Preferences{}
	for i :=0;i<args.len;i+=1{
		a:=args[i]
		match a {
			// TODO multiple match values per branch
			'-o'{
				p.out_name = args[i + 1]
				i+=1
			}
			'--output'{
				p.out_name = args[i + 1]
				i+=1
			}
			else {
				if p.command.len == 0 {
					p.command = a
				}
			}
		}
	}
	if p.out_name.len == 0 {
		p.out_name = p.command.replace('.bait', '')
	}
	if p.command == 'test' {
		p.is_test = true
	}
	return p
}

fun bait_exe_path() string {
	bexe := os.getenv('BAITEXE')
	if bexe.len > 0 {
		return bexe
	}
	exe_path := os.real_path(os.executable())
	os.setenv('BAITEXE', exe_path, true)
	return exe_path
}
