// This file is part of: bait.
// Copyright (c) 2022 Lukas Neubert.
// Use of this code is governed by an MIT License (see LICENSE.md).
package builtin

global test_runner TestRunner = TestRunner{}

struct TestRunner{
	tinfo TestInfo
	ainfo AssertInfo
	assert_passes i32
	assert_fails i32
}

struct TestInfo{
	fun_name string
	file string
}

struct AssertInfo{
	line_nr i32
	exp_val string
	got_val string
}

fun (tr &TestRunner) set_test_info(name string, file string) {
	tr.tinfo = TestInfo{
		fun_name: name
		file: file
	}
}

fun (tr &TestRunner) set_assert_info(line i32, exp string, got string) {
	tr.ainfo = AssertInfo{
		line_nr: line
		exp_val: exp
		got_val: got
	}
}

fun (tr &TestRunner) exit_code() i32 {
	if tr.assert_fails > 0 {
		return 1
	}
	return 0
}

fun (tr &TestRunner) assert_pass(){
	tr.assert_passes += 1
}

fun (tr &TestRunner) assert_fail(){
	tr.assert_fails += 1
	println(tr.tinfo.file + ':' + tr.ainfo.line_nr.str() + ' ' + tr.tinfo.fun_name)
	if tr.ainfo.exp_val.len > 0 and tr.ainfo.got_val.len > 0 {
		println('   left: ' + tr.ainfo.exp_val)
		println('  right: ' + tr.ainfo.got_val)
	}
}
